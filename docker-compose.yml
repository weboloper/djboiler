services:
  redis:
    image: redis
    container_name: redis
    
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db
    restart:  always
    ports: 
      - "5432:5432"
    
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart:  always
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    
  backend:
    build: 
      context: ./backend    # Django uygulamanızın bulunduğu dizin
    volumes:
      - ./backend:/django
    ports:
      - 8000:8000
    image: backend:django
    container_name: django_app
    # command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn --bind 0.0.0.0:8000 myapp.wsgi:application  # Gunicorn ile çalıştırma
    # command: gunicorn --bind 0.0.0.0:8000 myapp.wsgi:application -w 1 # 1 worker with the -w flag for low trafic
    depends_on:
      - db
      - redis
    
  celery:
    restart: always
    build: 
      context: ./backend    # Django uygulamanızın bulunduğu dizin
    command: celery -A myapp worker -l INFO # INFO or DEBUG
    volumes:
      - ./backend:/django
      - ./backend:/django/staticfiles
      - ./backend:/django/media
    container_name: celery
    depends_on:
      - db
      - redis
      - backend
    profiles:
      - celery
      
  frontend:
    container_name: nextjs_app
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    working_dir: /app
    depends_on:
      - backend
    command: npm run dev
    profiles:
      - nextjs
    # Optional: for local dev convenience
    environment:
      - NODE_ENV=development

  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/django
    depends_on:
      - backend
    container_name: nginx
    profiles:
      - django

  nginx_nextjs:
    image: nginx:latest
    ports:
      - "80:8080"
    volumes:
      # NGINX FOR NEXT.JS FRONTEND
      - ./nginx/nginx-setup-frontend.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/django
    depends_on:
      - backend
      - frontend
    container_name: nginx_nextjs
    profiles:
      - nextjs